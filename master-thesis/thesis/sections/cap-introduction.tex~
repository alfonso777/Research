\chapter{Introdução}
\label{cap:introduction}

A maneira de desenvolver complexos sistemas e aplicações tem mudado até convergir, atualmente,  em arquiteturas de software e modelos de computação
orientadas a serviços, o que é chamado de Computação Orientada a serviços (SOC).SOC é o novo paradigma que utiliza serviços como base para
construir e suportar um desenvolvimento rápido, de baixo custo, de baixo acoplamento  e de fácil  composição de aplicações distribuídas heterogêneas \cite{Papazoglou2008}.
%%SOC abrange muitas disciplinas e é enormemente complexo ...

O paradigma SOC considera todas as funções de negócio  como serviços de software modulares e baseado em padrões. O
SOA (Arquitetura Orientada a Serviços) associado, estabelece uma relação definida entre esses serviços, oferecendo funções de negócios discretos
e os consumidores desses serviços, independentemente da implementação da tecnologia subjacente \cite{Luthria2009}.
A arquitetura orientada a serviços cumpre um papel importante dentro de SOC. As camadas mais altas da pirâmide SOA \cite{Papazoglou2008} fornecem
de suporte adicional, que é requerida pela composição de serviços. A camada de composição de serviços engloba papeis e funcionalidades necessárias
para a consolidação de múltiplos serviços em um único serviço. A composição pode ser conseguida de duas maneiras principalmente: orquestração e coreografias,
das quais a coreografia de serviços é a mais colaborativa e especifica a composição desde uma perspectiva global. E dada a natureza distribuída e
 colaborativa de uma coreografia de serviços, é a mais indicada para ser a melhor alternativa de integração de sistemas complexos e heterogêneos
em larga escala \cite{Vincent2010}.

%Motivação
No SOC existem vários desafios de pesquisa a serem superados, tais como a especificação, adaptação dinâmica, reconfiguração, síntese, monitoramento,
 composição automática, integração com modelos QoS, entre outras. Respeito ao monitoramento e uso de atributos QoS em composição  de serviços Web, existem
várias ferramentas tais como \textit{QoS Explorer} \cite{Hughes2006} que está focado na predição de QoS, \textit{Meteor-S} \cite{Aggarwal2004} que está
 focado principalmente em serviços Web semânticos  e cuja aplicação em um ambiente P2P (ponto a ponto) foi realizada em \cite{Ghodousi2005}.
\textit{WS-Diamond} \cite{Console2009} é um \textit{framework} que possui capacidades de auto-diagnóstico e auto-cura(\textit{self-healing}) na
execução de serviços compostos complexos, que inclui falhas funcionais e não funcionais(por exemplo, perda de QoS). Um modelo de monitoramento para
 coreografias de serviços que utiliza  \textit{WS-Diamond} é \textit{Quadrantis} \cite{MIUR2007}, que  foi realizada
 em \cite{Buccafurri2008a},mas está orientado a serviços de aprovisionamento de conteúdo multimídia e com foco nas características funcionais. \textit{VReSCO}
\cite{Hummer2010} é um ambiente de execução desenvolvido para encarar vários  desafios de SOC, tais como invocação e enlace dinâmico de serviços Web, descoberta
de serviços e metadados, composição de serviços com consciência de QoS (\textit{QoS-aware}), adaptação dinâmica, entre outros.

%Justificação
Um fator chave para a realização de comportamento adaptativo para sistemas orientados a serviços em geral, e especificamente em composição de serviços, é
a disponibilidade e suporte de informação QoS \cite{Rosenberg2009}. Em consequência, o monitoramento de QoS torna-se importante, porque observa, coleta e reporta:
 informação de QoS em tempo de execução e a evolução do sistema baseado em serviços \cite{Jamoussi2010}. A partir do monitoramento, com as medições de QoS
é possível alavancar o enlace dinâmico,seleção, composição de serviços, adaptação, autocura(\textit{self-healing}), otimização de composição de serviços,
entre outros, mas com consciência de QoS. Quando se integram serviços dentro de processos de negócio complexos, é importante levar em consideração os atributos QoS em vários
níveis,tais como rede, execução, serviços, orquestração (fluxos de trabalho) e coreografias. As coreografias de serviços são importantes, porque são
  uma maneira de integrar e descrever colaborações entre  processos de negócios interorganizacionais(\textit{cross-organizationals}), e que está   %%falta referenciar aqui
no topo da pilha de protocolos dos serviços Web, como uma forma de composição de serviços, e está acima da orquestração. É por isso que este trabalho pretende  realizar um
 monitoramento de informações QoS em vários níveis e da maneira menos intrusiva possível, definindo e integrando SLAs no nível de coreografia.


Neste trabalho se aborda a maneira de realizar um monitoramento de coreografias de serviços Web, baseado em SLA e em atributos de QoS. Será implementado
um monitoramento "não intrusivo" que mistura várias abordagens do lado do cliente, tais como ``Probing request'' e técnicas de``sniffing'' para medir atributos que são mais
 precisos de medir no lado do servidor. O monitoramento será integrado em um modelo multi-camada de QoS e SLA, e que foi proposto em \cite{Rosenberg2009}. A
definição de SLAs são realizados no nível de coreografia, para depois, ser mapeados em políticas QoS no nível de orquestração, que por sua vez, calcula seu QoS agregando valores de atributos QoS não determinísticos coletados no nível dos serviços Web. Assim, o objetivo final
deste monitoramento de coreografias não intrusivo é a detecção de violações de SLA por meio de políticas e atributos QoS dos níveis embaixo.

%%uma abordagem para realizar monitoramento da coreografia baseada em atributos QoS de cada participante na composição, em um trabalho futuro
%%serão considerados atributos de QoS da composição toda.

%---------------------------------------------%
\section{Objetivos}
\label{sec:objectives}

Os  objetivos primários deste trabalho são :

\begin{enumerate}
  \item Implementar uma abordagem que misture técnicas de monitoramento do lado do cliente,
para detectar violações de SLA em coreografias de serviços Web, mas de maneira ``não intrusiva'' e baseado em um modelo multi-camada de QoS e SLA.

%%para  de coreografias de serviços Web baseado nos atributos QoS dos participantes,
  %%   para  detetar falhas e violações nos contratos QoS na coreografia de serviços Web.
  %%Avaliar o deseempenho dos metodos de selecao de servicos Web baseados em atributos QoS em uma coreografia de serviços Web
   \item Integrar o modelo multi-camada de QoS e SLA com as especificações que estão no nível de coreografia, orquestração e serviços Web.
      Concretamente, realizar a integração de WSLA (SLA) em coreografias especificadas em WS-CDL, de WS-QoSPolicy (políticas QoS) em BPEL  e
      de atributos QoS a serviços Web.

  \item Avaliar o desempenho do monitoramento ``não intrusivo'' de coreografias, que inclui a detecção de violação de SLA baseada em atributos QoS  de desempenho e confiabilidade.
  %\item Avaliar o desempenho de Verificar o cumprimento dos contratos QoS dos participantes na coreografia.
  %\item Reagir caso acontecer uma violação nos contratos QoS no provedor de serviço.  %%%
\end{enumerate}


%%A abordagem proposta será avaliada por meio de um estudo de caso descrito no Capítulo ~\ref{cap:purpose} e será diretamente influenciada pelos
%%resultados obtidos nos experimentos referentes a (2) e (3), descritos no Capítulo ~\ref{cap:purpose}.

Os objetivos secundários deste trabalho são:

  \begin{enumerate}
    \item Especificar, mapear e rodar uma coreografia de serviços Web especificada em WS-CDL, utilizando WS-BPEL como implementação dos participantes da coreografias
  e WSDL para definir as interfaces das funcionalidades dos serviços Web. %%BPMN2 mesmo?

    \item Coletar e medir os valores dos atributos QoS tanto de desempenho quanto de confiabilidade.
  Sobretudo, da latência da rede, na qual se utiliza técnicas de análise do tráfego de pacotes TCP para seu cálculo, este atributo serve para calcular o tempo de resposta que não pode ser medido direitamente no cliente.
    \item Avaliar o desempenho do monitoramento na coleta e medição dos valores dos atributos QoS.
    %\item Obter valores dos atributos QoS em uma coreografia de serviços Web durante seu funcionamento.
    %
  \end{enumerate}

%---------------------------------------------%
\section{Considerações Preliminares}
\label{sec:preliminaries}
%%Nao será implementado predição de QoS
%%perfis de usuarios que requererem os serviços

%% falta especificar a plataforma onde será feita a implementação: ODE Apache, PetalsESB, Vresco, Meteor-OS, WS-Diamond
%%linguagem de especificação da coreografias

O monitoramento a implementar é uma mistura de abordagens do lado do cliente para conseguir o objetivo de não ser intrusivo. Tais abordagens
incluem o ``\textit{Probe Request}'' e técnicas de \textit{sniffing} para realizar a análise de trafego e conseguir estimar os valores de atributos QoS,
tais como a latência de rede, que serve de base para o cálculo de atributos tais como o tempo de execução e o tempo de resposta.

Utilizará-se o modelo multi-camada de QoS e SLA em coreografias proposto em \cite{Rosenberg2009}, que inclui a utilização de monitor Quatsch \cite{Rosenberg2006}
para medir atributos QoS. Nesta pesquisa o monitoramento visa ser integrado no nível de  coreografia, orquestração e serviços baseado nesse modelo multi-camada.  Dessa
 maneira, será realizada a detecção de violações dos SLAs para verificar seu cumprimento.

A reação (punições, adaptação, reconfiguração, entre outros) ante a detecção de alguma violação de um SLA sai do escopo desta
pesquisa, porque antes disso, apenas se realiza a notificação das falhas. Também não inclui predição de QoS baseado no histórico, mas isto será
levado em conta em trabalhos futuros, assim como o foco na adaptação  dinâmica de coreografias como uma forma de reação. Os atributos de QoS a serem utilizados
são de tipo não determinísticos, e se levaram em consideração os de desempenho e de disponibilidade baseado na taxonomia proposta em \cite{Michlmayr2009}, e que
está detalhado no capítulo \label{cap:QoS_choreography}.

%Finalmente o estudo de caso estará baseado no \textit{testbed}
%para SOA WorldTravel \cite{Budny2008} e para realizar os experimentos serão utilizados PlanetLab\cite{PlanetLab} ou OpenCirrus\cite{OpenCirrus}.

%---------------------------------------------%
\section{Contribuições}
\label{sec:contributions}
As principais contribuições desta pesquisa são:

       \begin{itemize}
         \item  Proposta de uma arquitetura para detecção de violações de SLAs em coreografias de serviços Web.
             \begin{itemize}
                  \item Monitoramento.
                  \item Comparando os quantis das distribuições especificadas no SLA com os quantis estimados pelo monitor, dentro de uma zona de tolerância.
                  \item Parâmetros envolvidos: número de quantis, qual distribuição de probabilidade, tamanho da zona de tolerância, entre outros.
            \end{itemize}

         \item Definição de SLAs probabilísticos para coreografias de serviços Web.
            \begin{itemize}
              \item Agregação de QoS de maneira probabilística.
              \item Definição de parâmetros: Simulação pelo método de  Monte-Carlo.
            \end{itemize}
         \item Monitoramento de coreografias de serviços Web.
            \begin{itemize}
              \item Métricas e agregação probabilística.
              %\item Verificação de detecção de violações do SLA.
            \end{itemize}
         \item Atributos de QoS: tempo de resposta, latência de rede e largura de banda (monitoramento passivo).
         %\item <5->Implementação do monitoramento.
       \end{itemize}



%---------------------------------------------%
\section{Organização do Trabalho}
\label{sec:organzation}
No capítulo ~\ref{cap:concepts} tratam-se os aspectos e conceitos básicos tais como os serviços Web, SOA, SOC. No capítulo ~\ref{cap:service_composition}
se descreve uma estado da arte acerca da composição de serviços. Em seguida, no capítulo ~\ref{cap:service_choreography} se descrevem os conceitos de coreografia de serviços,
assim como os modelos, tópicos de pesquisa, padrões e ferramentas. Depois, no capítulo ~\label{cap:QoS_choreography}
 se descrevem os aspectos de QoS e o monitoramento de coreografia
que serão abordados no trabalho. Finalmente, no capítulo \ref{cap:purpose} se detalham a proposta, implementação do monitoramento,  %junto com a descrição do estudo de caso,
as ferramentas e tecnologias a utilizar, as avaliações, trabalhos futuros e o cronograma
 de trabalho. %Finalmente, as conclusões e trabalhos futuros são dados no capítulo ~\ref{cap:conclusions}.

